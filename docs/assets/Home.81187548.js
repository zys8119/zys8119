import{_ as f}from"./index.072ace10.js";import{f as x,o as w,c as v,p as R,g as H,h as l,i as S,a as b}from"./vendor.8a7a44b7.js";const E=h=>(R("data-v-2013492f"),h=h(),H(),h),z={class:"AnimationTime"},I=E(()=>l("div",{id:"canvas_container"},null,-1)),C=E(()=>l("p",{id:"github"},[l("a",{href:"https://github.com/zys8119",target:"_blank"},[l("img",{src:"https://yoshihitofujiwara.github.io/icon_white.png",width:"40",height:"40",alt:"Github"})])],-1)),P=[I,C],G={setup(h){return x(()=>{class d{constructor(s,a){this.$container=s,this.options=$.extend(!0,{isController:!1,isAxis:!1,isGui:!0,isStats:!0},a),this.width=this.$container.width(),this.height=this.$container.height(),this.startTime=null,this.time=null,this._animationId=null,this.event=new INK.Events,this.stats=new Stats,this.$container[0].appendChild(this.stats.dom),this.options.isStats||$(this.stats.domElement).css({display:"none"}),this.options.isGui&&(this.gui=new dat.GUI,this.gui.params={},this.gui.params.stats=this.options.isStats,this.gui.add(this.gui.params,"stats").name("FPS Metor").onChange(()=>{this.gui.params.stats?$(this.stats.domElement).css("display","block"):$(this.stats.domElement).css("display","none")})),this.renderer=new THREE.WebGLRenderer,this.renderer.setClearColor(0),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.width,this.height),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(60,this.width/this.height,.01,1e4),this.camera.position.set(0,0,10),this.camera.aspect=this.width/this.height,this.options.isController&&(this.controller=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.controller.autoRotate=!1,this.controller.autoRotateSpeed=5),this.options.isAxis&&(this.axis=new THREE.AxisHelper(1e3),this.scene.add(this.axis)),this.$container[0].appendChild(this.renderer.domElement),$(window).resize(this.resize.bind(this))}start(){this.startTime=performance.now(),cancelAnimationFrame(this._animationId),this.event.trigger("start",this),this.update()}stop(){cancelAnimationFrame(this._animationId),this.event.trigger("stop",this)}update(){this.time=(performance.now()-this.startTime)/1e3,this._animationId=requestAnimationFrame(this.update.bind(this)),this.event.trigger("update",this),this.render(),this.controller&&this.controller.update(),this.gui.params.stats&&this.stats.update()}render(){this.renderer.render(this.scene,this.camera)}resize(){this.width=this.$container.width(),this.height=this.$container.height(),this.renderer.setSize(this.width,this.height),this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.event.trigger("resize",this)}}let t,r=[],p=[],c,g,n=_();function T(){console.log($("#canvas_container")),t=new d($("#canvas_container"),{isController:!0}),t.gui.params.particles=5e3*6,t.gui.params.size=1,c=new THREE.TextureLoader().load("https://yoshihitofujiwara.github.io/particle-clock/assets/img/icon.png"),c.minFilter=THREE.LinearFilter,c.magFilter=THREE.LinearFilter,c.format=THREE.RGBFormat;let e=new THREE.FontLoader,s="https://yoshihitofujiwara.github.io/particle-clock/assets/fonts/helvetiker_bold.typeface.json?"+performance.now();e.load(s,a=>{g=a,t.gui.add(t.gui.params,"particles",500,1e5).step(10).onChange(i=>{m()}),t.gui.add(t.gui.params,"size",.1,2).onChange(i=>{m()}),m(),t.start()}),INK.isSmartPhone()?t.camera.position.z=360:t.camera.position.z=120,t.event.on("update",()=>{p.forEach((i,o)=>{i.particles.verticesNeedUpdate=!0,i.particleSystem.material.color.setHSL((Math.sin((t.time+o/n.length*INK.TWO_PI)*.2)+1)/2,.5,.5)});let a=_();if(n!=a){for(let i=0;i<n.length;i++)n[i]!=a[i]&&y(i,+a[i]);n=a}})}function m(){for(let e=0;e<10;++e)r[e]={},r[e].geometry=new THREE.TextGeometry(e,{font:g,size:40,height:8,curveSegments:10}),r[e].geometry.center(),r[e].particles=new THREE.Geometry,r[e].particles.vertices=THREE.GeometryUtils.randomPointsInGeometry(r[e].geometry,t.gui.params.particles/6);t.scene.remove.apply(t.scene,t.scene.children);for(let e=0;e<n.length;++e){let s=new THREE.Geometry;s.vertices=r[+n[e]].particles.clone(r[+n[e]].particles).vertices;let a=new THREE.PointsMaterial({size:t.gui.params.size*window.devicePixelRatio,map:c,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),i=new THREE.Points(s,a);i.position.x=34*e-34*2.55,p[e]={particleSystem:i,particles:s},t.scene.add(i)}}function y(e,s){let a=p[e],i=r[s].particles;for(let o=0;o<a.particles.vertices.length;o++)TweenMax.to(a.particles.vertices[o],.7,{ease:Expo.easeInOut,x:i.vertices[o].x,y:i.vertices[o].y,z:i.vertices[o].z})}function _(){let e=new Date;return u(e.getHours())+u(e.getMinutes())+u(e.getSeconds())}function u(e){let s=""+e;return s.length<2&&(s="0"+s),s}$(()=>{T()})}),(d,t)=>(w(),v("div",z,P))}};var A=f(G,[["__scopeId","data-v-2013492f"]]);const F={class:"Home"},M=S({setup(h){return(d,t)=>(w(),v("div",F,[b(A)]))}});var k=f(M,[["__scopeId","data-v-b7b67732"]]);export{k as default};
